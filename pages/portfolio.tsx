import Head from "next/head";
import React, { useCallback, useEffect, useState } from "react";
import Web3 from "web3";
import Navbar from "../components/Navbar";
import { PortfolioMarketCard } from "../components/PortfolioMarketCard";
import { useData } from "../contexts/DataContext";
import styles from "../styles/Home.module.css";
import { orderBy } from "lodash";

export interface MarketProps {
  id: number;
  title?: string;
  description?: string;
  atitle?: string;
  btitle?: string;
  imageHash?: string;
  totalAmount?: number;
  totalYes?: number;
  totalNo?: number;
  userYes?: string;
  averageBuyPrice?: string;
  userNo?: string;
}

export interface QuestionsProps {
  id: number;
  title?: string;
  description?: string;
  aTitle?: string;
  bTitle?: string;
  imageHash?: string;
  totalAmount?: number;
  totalYes?: number;
  totalNo?: number;
  averageBuyPrice?: string;
}

const Portfolio = () => {
  const { polymarket, account, loadWeb3, loading, getBets, getUserBets } =
    useData();
  const [markets, setMarkets] = useState<MarketProps[]>([]);
  const [portfolioValue, setPortfolioValue] = useState<number>(0);
  const [allQuestions, setAllQuestions] = useState<QuestionsProps[]>([]);
  const [openPositions, setOpenPositions] = useState<number>(0);

  const getMarkets = useCallback(async () => {
    var bets = await getBets();
    console.log("get all markets in portfolio", bets);
    var allQuestions: QuestionsProps[] = [];
    for (var i = 1; i < Object.keys(bets).length + 1; i++) {
      var bet = bets[i];
      allQuestions.push({
        id: i,
        title: bet.title,
        imageHash: bet.imageHash ?? undefined,
        totalAmount: bet.currentTotalAAmount + bet.currentTotalBAmount,
        totalYes: bet.currentTotalAAmount,
        totalNo: bet.currentTotalBAmount,
        description: bet.description,
        aTitle: bet.optionATitle,
        bTitle: bet.optionBTitle,
      });
    }

    var dataArray: MarketProps[] = [];
    var totalPortValue = 0;
    var resp = await getUserBets(account);
    console.log("resp", resp);
    resp.abets.forEach((bet) => {
      dataArray.push({
        id: bet.betId,
        userYes: bet.amount.toString(),
        averageBuyPrice: bet.averageRatio.toString(),
      });
      totalPortValue += bet.amount;
    });
    resp.bbets.forEach((bet) => {
      dataArray.push({
        id: bet.betId,
        userNo: bet.amount?.toString() ?? undefined,
        averageBuyPrice: bet.averageRatio.toString(),
      });
      totalPortValue += bet.amount;
    });
    setPortfolioValue(totalPortValue);
    for (var i = 0; i < dataArray.length; i++) {
      var question = allQuestions.find((item) => item.id == dataArray[i].id);
      dataArray[i].title = question!.title;
      dataArray[i].description = question!.description;
      dataArray[i].atitle = question!.aTitle;
      dataArray[i].btitle = question!.bTitle;
      dataArray[i].imageHash = question!.imageHash;
      dataArray[i].totalAmount = question!.totalAmount;
      dataArray[i].totalYes = question!.totalYes;
      dataArray[i].totalNo = question!.totalNo!;
    }
    setMarkets(orderBy(dataArray, ["id"], ["asc"]));
  }, [account, polymarket]);

  useEffect(() => {
    loadWeb3().then(() => {
      if (!loading) {
        getMarkets();
      }
    });
  }, [loading]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Polymarket</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <main className="w-full flex flex-col sm:flex-row flex-wrap sm:flex-nowrap py-4 flex-grow max-w-5xl">
        <div className="w-full flex flex-col pt-1">
          <div className="p-10 bg-blue-700 rounded-lg flex flex-row justify-evenly">
            <div className="flex flex-col items-center">
              <h1 className="text-white opacity-50 text-lg">Portfolio Value</h1>
              <h1 className="text-white text-4xl font-bold">
                {Web3.utils.fromWei(portfolioValue.toString())} ETH
              </h1>
            </div>
          </div>
          <span className="font-bold my-3 text-lg">Your Market Positions</span>
          {markets.map((market) => (
            <PortfolioMarketCard
              id={market.id.toString()}
              description={market.description!}
              title={market.title!}
              aTitle={market.atitle!}
              bTitle={market.btitle!}
              imageHash={market.imageHash!}
              totalAmount={market.totalAmount!.toString()}
              totalYes={market.totalYes!.toString()}
              totalNo={market.totalNo!.toString()}
              userYes={market.userYes!}
              userNo={market.userNo!}
              userAveragePrice={market.averageBuyPrice!}
              key={market.id!}
            />
          ))}
        </div>
      </main>
    </div>
  );
};

export default Portfolio;
